
TAKEN FROM https://code.google.com/archive/p/puz/wikis/FileFormat.wiki (THANK YOU!!)
BUT FORMATTED NICELY


Define a short to be a little-endian two byte integer. The file header is then described in the following table.

| Component     | Offset     | End     | Length     | Type     | Description     |
|:--------------|:-----------|:--------|:-----------|:---------|:----------------|
| Checksum      | 0x00       | 0x01    | 0x2        | short    | overall file checksum
| File Magic    | 0x02       | 0x0D    | 0xC        | string   | NUL-terminated constant string: 4143 524f 5353 2644 4f57 4e00 ("ACROSS&DOWN")


The following checksums are described in more detail in a separate section below.


| Component             | Offset     | End     | Length     | Type     | Description     |
|:----------------------|:-----------|:--------|:-----------|:---------|:----------------|
| CIB Checksum          | 0x0E       | 0x0F    | 0x2        | short    | (defined later)
| Masked Low Checksums  | 0x10       | 0x13    | 0x4        |          | A set of checksums, XOR-masked against a magic string.
| Masked High Checksums | 0x14       | 0x17    | 0x4        |          | A set of checksums, XOR-masked against a magic string.



| Component          | Offset     | End     | Length     | Type     | Description     |
|:-------------------|:-----------|:--------|:-----------|:---------|:----------------|
| Version String(?)  | 0x18       | 0x1B    | 0x4        | string   | e.g. "1.2\0"
| Reserved1C(?)      | 0x1C       | 0x1D    | 0x2        | ?        | In many files, this is uninitialized memory
| Scrambled Checksum | 0x1E       | 0x1F    | 0x2        | short    | In scrambled puzzles, a checksum of the real solution (details below). Otherwise, 0x0000.
| Reserved20(?)      | 0x20       | 0x2B    | 0xC        | ?        | In files where Reserved1C is garbage, this is garbage too.
| Width              | 0x2C       | 0x2C    | 0x1        | byte     | The width of the board
| Height             | 0x2D       | 0x2D    | 0x1        | byte     | The height of the board
| # of Clues         | 0x2E       | 0x2F    | 0x2        | short    | The number of clues for this board
| Unknown Bitmask    | 0x30       | 0x31    | 0x2        | short    | A bitmask. Operations unknown.
| Scrambled Tag      | 0x32       | 0x33    | 0x2        | short    | 0 for unscrambled puzzles. Nonzero (often 4) for scrambled puzzles.






Immediately following the boards comes the strings. All strings are encoded in ISO-8859-1 and end with a NUL. Even if a string is empty, its trailing NUL still appears in the file. In order, the strings are:

| Description | Example            |
|:------------|:-------------------|
| Title       | Theme: .PUZ format |
| Author      | J. Puz / W. Shortz |
| Copyright   | (c) 2007 J. Puz    |
| Clue#1      | Cued, in pool      |
| ...         | ...more clues...   |
| Clue#n      | Quiet              |
| Notes       | http://mywebsite   |


The known extra sections are:

| Section Name     | Description                                    |
|:-----------------|:-----------------------------------------------|
| GRBS             | where rebuses are located in the solution      |
| RTBL             | contents of rebus squares, referred to by GRBS |
| LTIM             | timer data                                     |
| GEXT             | circled squares, incorrect and given flags     |
| RUSR             | user-entered rebus squares                     |